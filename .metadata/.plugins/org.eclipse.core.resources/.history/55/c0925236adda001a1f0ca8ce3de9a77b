package P1062;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	static int N, K;
	static String[] words;
	static boolean[] visited;
	static int selectedCount;
	static int ret = -1;
	
	public static void main(String[] args) throws FileNotFoundException {
		System.setIn(new FileInputStream("src\\P1062\\input.txt"));
		Scanner sc = new Scanner(System.in);
		
		N = Integer.parseInt(sc.next());
		K = Integer.parseInt(sc.next()) - 5;
		words = new String[N];
		visited = new boolean[26];
		visited['a' - 'a'] = visited['n' - 'a'] = visited['t' - 'a'] =
			visited['i' - 'a'] = visited['c' - 'a'] = true;
		selectedCount = 5;
		
		if(K <= 4) {
			System.out.println(0);
		}
		else {
			dfs(0);
			System.out.println(ret);
		}
		/*
		for(int i = 0; i < N; i++) {
			words[i] = sc.next().replaceAll("[antic]", "");
		}
		System.out.println(Arrays.toString(words));
		System.out.println(Arrays.toString(visited));
		*/
	}
	
	static void dfs(int index) {
		visited[index] = true;
		selectedCount++;
		if(selectedCount == K) {
			// 현재 상태에서 읽을 수 있는 단어의 수 계산
			ret = Math.max(ret, calcAnswer());
			return;
		}
		
		for(int i = 0; i < 26; i++) {
			if(visited[i] == false) {
				dfs(i);
			}
		}
		visited[index] = false;
	}
	
	static int calcAnswer() {
		int ret = 0;
		
		for(int i = 0; i < words.length; i++) {
			boolean canRead = true;
			for(int j = 0; j < words[i].length(); j++) {
				int index = words[i].charAt(j) - '0';
				if(visited[index] == false) {
					canRead = false;
					break;
				}
			}
			
			if (canRead)
				ret++;
		}
		return ret;
	}
}
