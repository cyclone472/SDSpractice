package P1039;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class Main {
	static char[] N;
	static int K;
	
	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub
		System.setIn(new FileInputStream("src\\P1039\\input.txt"));
		Scanner sc = new Scanner(System.in);
		
		N = sc.next().toCharArray();
		K = Integer.parseInt(sc.next());
		int numChange = 0;
		
		char max = '0';
		for (int i = 1; i < N.length; i++) {
			max = (max < N[i] ? N[i] : max);
		}
		if (max == '0' && N.length == 2)
			System.out.println(-1);
		
		if (N.length - 1 <= K) {
			Arrays.sort(N);
			K -= (N.length - 1);
			if (K % 2 == 0)
				System.out.println(Arrays.toString(N));
			else {
				char tmp = N[0];
				N[0] = N[1];
				N[1] = tmp;
				System.out.println(Arrays.toString(N));
			}
		}
		else {
			for (int i = 0; i < K; i++) {
				if (i == N.length)
					break;
				
				max = '0';
				int maxIdx = -1;
				for (int j = i; j < N.length; j++) {
					if (max < N[i]) {
						max = N[i];
						maxIdx = j;
					}
				}
				if (maxIdx != -1 && N[i] != max) {
					char tmp = N[i];
					N[i] = N[maxIdx];
					N[maxIdx] = N[i];
					numChange++;
				}
				
			}
			
			if (numChange < K) {
				if (K % 2 == 0)
					System.out.println(Arrays.toString(N));
				else {
					char tmp = N[0];
					N[0] = N[1];
					N[1] = tmp;
					System.out.println(Arrays.toString(N));		
				}
			}
		}
	}

}
